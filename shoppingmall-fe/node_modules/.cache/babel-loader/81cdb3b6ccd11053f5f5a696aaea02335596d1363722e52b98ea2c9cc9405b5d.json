{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\shoppingmall\\\\shoppingmall-fe\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"./AuthContext\"; // 로그인 상태 확인용\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nconst initialState = {\n  cartItems: []\n};\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_CART\":\n      return {\n        ...state,\n        cartItems: action.payload\n      };\n    case \"ADD_ITEM\":\n      const exist = state.cartItems.find(item => item.id === action.payload.id);\n      if (exist) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map(item => item.id === action.payload.id ? {\n            ...item,\n            quantity: item.quantity + action.payload.quantity\n          } : item)\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, action.payload]\n        };\n      }\n    case \"UPDATE_ITEM\":\n      return {\n        ...state,\n        cartItems: state.cartItems.map(item => item.id === action.payload.id ? {\n          ...item,\n          quantity: action.payload.quantity\n        } : item)\n      };\n    case \"REMOVE_ITEM\":\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(item => item.id !== action.payload)\n      };\n    case \"CLEAR_CART\":\n      return {\n        ...state,\n        cartItems: []\n      };\n    default:\n      return state;\n  }\n};\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartState, dispatch] = useReducer(cartReducer, initialState);\n  const {\n    userInfo\n  } = useContext(AuthContext);\n\n  // 비회원일 때는 localStorage에 저장\n  useEffect(() => {\n    if (!userInfo.token) {\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartState.cartItems));\n    }\n  }, [cartState.cartItems, userInfo.token]);\n\n  // 최초 렌더링 시 localStorage에서 불러오기 (비회원)\n  useEffect(() => {\n    if (!userInfo.token) {\n      const localItems = JSON.parse(localStorage.getItem(\"cartItems\")) || [];\n      dispatch({\n        type: \"SET_CART\",\n        payload: localItems\n      });\n    }\n  }, [userInfo.token]);\n\n  // 로그인 시 서버 장바구니 병합\n  useEffect(() => {\n    const mergeCart = async () => {\n      const localItems = JSON.parse(localStorage.getItem(\"cartItems\")) || [];\n      try {\n        // 서버 장바구니 가져오기\n        const res = await fetch(\"/api/cart\", {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`\n          }\n        });\n        const serverItems = await res.json(); // [{ id, quantity }, ...]\n\n        // 병합 로직\n        const merged = [...serverItems];\n        localItems.forEach(localItem => {\n          const existing = merged.find(item => item.id === localItem.id);\n          if (existing) {\n            existing.quantity += localItem.quantity;\n          } else {\n            merged.push(localItem);\n          }\n        });\n\n        // 병합된 장바구니 서버에 저장\n        await fetch(\"/api/cart/merge\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${userInfo.token}`\n          },\n          body: JSON.stringify(merged)\n        });\n\n        // context state 반영\n        dispatch({\n          type: \"SET_CART\",\n          payload: merged\n        });\n\n        // localStorage 초기화\n        localStorage.removeItem(\"cartItems\");\n      } catch (err) {\n        console.error(\"장바구니 병합 실패:\", err);\n      }\n    };\n    if (userInfo.token) {\n      mergeCart();\n    }\n  }, [userInfo.token]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartState,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"byiroxbM53mUzgJhunjGdFg7Zlo=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useEffect","useContext","AuthContext","jsxDEV","_jsxDEV","CartContext","initialState","cartItems","cartReducer","state","action","type","payload","exist","find","item","id","map","quantity","filter","CartProvider","children","_s","cartState","dispatch","userInfo","token","localStorage","setItem","JSON","stringify","localItems","parse","getItem","mergeCart","res","fetch","headers","Authorization","serverItems","json","merged","forEach","localItem","existing","push","method","body","removeItem","err","console","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/project/shoppingmall/shoppingmall-fe/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useReducer, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"./AuthContext\"; // 로그인 상태 확인용\r\n\r\nexport const CartContext = createContext();\r\n\r\nconst initialState = {\r\n  cartItems: []\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_CART\":\r\n      return { ...state, cartItems: action.payload };\r\n\r\n    case \"ADD_ITEM\":\r\n      const exist = state.cartItems.find(item => item.id === action.payload.id);\r\n      if (exist) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map(item =>\r\n            item.id === action.payload.id\r\n              ? { ...item, quantity: item.quantity + action.payload.quantity }\r\n              : item\r\n          )\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, action.payload]\r\n        };\r\n      }\r\n\r\n    case \"UPDATE_ITEM\":\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, quantity: action.payload.quantity }\r\n            : item\r\n        )\r\n      };\r\n\r\n    case \"REMOVE_ITEM\":\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(item => item.id !== action.payload)\r\n      };\r\n\r\n    case \"CLEAR_CART\":\r\n      return { ...state, cartItems: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartState, dispatch] = useReducer(cartReducer, initialState);\r\n  const { userInfo } = useContext(AuthContext);\r\n\r\n  // 비회원일 때는 localStorage에 저장\r\n  useEffect(() => {\r\n    if(!userInfo.token) {\r\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartState.cartItems));\r\n    }\r\n  }, [cartState.cartItems, userInfo.token]);\r\n  \r\n  // 최초 렌더링 시 localStorage에서 불러오기 (비회원)\r\n  useEffect(() => {\r\n    if (!userInfo.token) {\r\n      const localItems = JSON.parse(localStorage.getItem(\"cartItems\")) || [];\r\n      dispatch({ type: \"SET_CART\", payload: localItems });\r\n    }\r\n  }, [userInfo.token]);\r\n\r\n  // 로그인 시 서버 장바구니 병합\r\n  useEffect(() => {\r\n    const mergeCart = async () => {\r\n      const localItems = JSON.parse(localStorage.getItem(\"cartItems\")) || [];\r\n\r\n      try {\r\n        // 서버 장바구니 가져오기\r\n        const res = await fetch(\"/api/cart\", {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` }\r\n        });\r\n        const serverItems = await res.json(); // [{ id, quantity }, ...]\r\n\r\n        // 병합 로직\r\n        const merged = [...serverItems];\r\n        localItems.forEach(localItem => {\r\n          const existing = merged.find(item => item.id === localItem.id);\r\n          if (existing) {\r\n            existing.quantity += localItem.quantity;\r\n          } else {\r\n            merged.push(localItem);\r\n          }\r\n        });\r\n\r\n        // 병합된 장바구니 서버에 저장\r\n        await fetch(\"/api/cart/merge\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`\r\n          },\r\n          body: JSON.stringify(merged)\r\n        });\r\n\r\n        // context state 반영\r\n        dispatch({ type: \"SET_CART\", payload: merged });\r\n\r\n        // localStorage 초기화\r\n        localStorage.removeItem(\"cartItems\");\r\n      } catch (err) {\r\n        console.error(\"장바구니 병합 실패:\", err);\r\n      }\r\n    };\r\n\r\n    if (userInfo.token) {\r\n      mergeCart();\r\n    }\r\n  }, [userInfo.token]);\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartState, dispatch }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}